using EventManagementSystemMerged.Models;
using System;

namespace EventManagementSystemMerged.Repo
{
    public class BookingProcessor
    {
        private readonly NotificationServices _notificationService;

        public BookingProcessor()
        {
            _notificationService = new NotificationServices();
        }

        public void ProcessTicketBooking(int userId, int eventId, bool paymentStatus, string eventName, DateTime eventDate)
        {
            if (paymentStatus)
            {
                // Create a new ticket
                var ticket = new Ticket
                {
                    UserID = userId,
                    EventID = eventId,
                    BookingDate = DateTime.Now,
                    PaymentStatus = paymentStatus
                };

                // Save the ticket to the database
                SaveTicket(ticket);

                // Send the notification
                _notificationService.SendNotification(userId, eventId, true, eventName, eventDate);
            }
            else
            {
                // Send the notification for payment success
                _notificationService.SendNotification(userId, eventId, false, eventName, eventDate);
            }
        }

        private void SaveTicket(Ticket ticket)
        {
            // Implement the logic to save the ticket to the database
            // This could involve using a DbContext to add and save the ticket
        }
    }
}
