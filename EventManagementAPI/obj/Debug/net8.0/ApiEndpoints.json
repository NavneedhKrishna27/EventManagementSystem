[
  {
    "ContainingType": "EventManagement_Merged_.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "EventManagement_Merged_.Controllers.AuthController\u002BLoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "EventManagement_Merged_.Controllers.AuthController\u002BRegisterUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.AuthController",
    "Method": "RegisterAdmin",
    "RelativePath": "api/Auth/register-admin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "EventManagement_Merged_.Controllers.AuthController\u002BRegisterUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementSystemMerged.Controllers.BookingController",
    "Method": "BookTicket",
    "RelativePath": "api/Booking/book",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventManagementSystemMerged.Controllers.BookingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementSystemMerged.Controllers.BookingController",
    "Method": "CancelTicket",
    "RelativePath": "api/Booking/cancel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventManagementSystemMerged.Controllers.BookingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetRevenueForEvent",
    "RelativePath": "api/Event/{eventId}/revenue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetEventStatus",
    "RelativePath": "api/Event/{eventId}/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetTicketsSoldForEvent",
    "RelativePath": "api/Event/{eventId}/tickets-sold",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetUsersForEvent",
    "RelativePath": "api/Event/{eventId}/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "AddEvent",
    "RelativePath": "api/Event/add-event",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventDetails",
        "Type": "EventManagementSystem_Merged_.DTO_s.EventDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetCompletedEvents",
    "RelativePath": "api/Event/completed",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetCurrentEvents",
    "RelativePath": "api/Event/current",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "DeleteConfirmation",
    "RelativePath": "api/Event/delete-event/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "Details",
    "RelativePath": "api/Event/details/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "EditEvent",
    "RelativePath": "api/Event/edit-event",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "evt",
        "Type": "EventManagementSystem_Merged_.DTO_s.EventDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "Index",
    "RelativePath": "api/Event/index",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "GetUpcomingEvents",
    "RelativePath": "api/Event/upcoming",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.EventController",
    "Method": "ViewEventByID",
    "RelativePath": "api/Event/view-event/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.FeedbackController",
    "Method": "GetFeedbacks",
    "RelativePath": "api/Feedback",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.FeedbackController",
    "Method": "AddFeedback",
    "RelativePath": "api/Feedback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedback",
        "Type": "EventManagementSystemMerged.Models.Feedback",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.FeedbackController",
    "Method": "GetAverageRating",
    "RelativePath": "api/Feedback/average-rating/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.FeedbackController",
    "Method": "GetRatingCounts",
    "RelativePath": "api/Feedback/rating-counts/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.LocationController",
    "Method": "GetLocations",
    "RelativePath": "api/Location",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventManagementSystemMerged.Models.Location, EventManagementSystem(Merged), Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.LocationController",
    "Method": "AddLocation",
    "RelativePath": "api/Location",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "location",
        "Type": "EventManagementSystemMerged.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.LocationController",
    "Method": "GetLocationById",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementSystemMerged.Models.Location",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.LocationController",
    "Method": "EditLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "location",
        "Type": "EventManagementSystemMerged.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.LocationController",
    "Method": "DeleteLocation",
    "RelativePath": "api/Location/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.PaymentController",
    "Method": "GetPayments",
    "RelativePath": "api/Payment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventManagementSystemMerged.Models.Payment, EventManagementSystem(Merged), Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.PaymentController",
    "Method": "CreatePayment",
    "RelativePath": "api/Payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newPayment",
        "Type": "EventManagementSystemMerged.Models.Payment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementSystemMerged.Models.Payment",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.PaymentController",
    "Method": "CompletePayment",
    "RelativePath": "api/Payment/complete-payment/{paymentId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.TicketController",
    "Method": "GetTickets",
    "RelativePath": "api/Ticket",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventManagementSystemMerged.Models.Ticket, EventManagementSystem(Merged), Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.TicketController",
    "Method": "GetTicketId",
    "RelativePath": "api/Ticket/{ticketId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ticketId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventManagementSystemMerged.Models.Ticket",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.TicketController",
    "Method": "GetParticipants",
    "RelativePath": "api/Ticket/participants/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventManagementSystemMerged.Models.User, EventManagementSystem(Merged), Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagementAPI.Controllers.TicketController",
    "Method": "GetTicketsSold",
    "RelativePath": "api/Ticket/tickets-sold/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userDto",
        "Type": "EventManagement_Merged_.Controllers.UserController\u002BUpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "GetUserHistory",
    "RelativePath": "api/User/{id}/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "RecoverUser",
    "RelativePath": "api/User/recover/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventManagement_Merged_.Controllers.UserController",
    "Method": "GetUsersByType",
    "RelativePath": "api/User/type/{userType}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userType",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]